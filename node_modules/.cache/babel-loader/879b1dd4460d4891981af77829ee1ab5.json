{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\contact-list-main\\\\contact-list-main\\\\src\\\\components\\\\UpdateContact.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleAlert = val => {\n      this.setState({\n        showAlert: val\n      });\n      setTimeout(() => {\n        this.setState({\n          showAlert: !val\n        });\n      }, 6000);\n    };\n\n    this.handleInputChange = (field, value) => {\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.handleAddressInputChange = (field, value) => {\n      // handle all address fields\n      this.setState({\n        address: { ...this.state.address,\n          //spread previous value\n          [field]: value //update new value of field\n\n        }\n      });\n    };\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n      const userId = this.props.user.id;\n      let url = `https://jsonplaceholder.typicode.com/users/1`;\n      const {\n        name,\n        email,\n        phone,\n        address\n      } = this.state;\n\n      if (name && email && phone && address.city) {\n        fetch(url, {\n          method: \"PUT\",\n          body: JSON.stringify({\n            name,\n            email,\n            phone,\n            address,\n            userId\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        }).then(response => response.json()).then(user => {\n          console.log(user); // call update contact function\n\n          this.props.updateContact(user);\n          this.props.hideForm();\n        });\n      } else {\n        this.toggleAlert(true);\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: {\n        city: \"\"\n      },\n      showAlert: false\n    };\n  }\n\n  render() {\n    const {\n      email,\n      name,\n      phone,\n      address\n    } = this.props.user;\n    const {\n      showAlert\n    } = this.state; // console.log(this.props);\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"m-3\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"border border-secondary p-4 border-3 rounded\",\n        style: {\n          width: \"22rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"info\",\n            children: \"Please fill in new or existing records...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"my-3\",\n          onClick: this.props.hideForm,\n          children: \"Close Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: name,\n              onChange: e => this.handleInputChange(\"name\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: email,\n              onChange: e => this.handleInputChange(\"email\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridPhonenumber\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: phone,\n              onChange: e => this.handleInputChange(\"phone\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: address.city,\n              onChange: e => this.handleAddressInputChange(\"city\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: this.onFormSubmit,\n          children: \"UpdateContact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UpdateContact;","map":{"version":3,"names":["React","Component","Form","Button","Row","Col","Container","Alert","UpdateContact","constructor","props","toggleAlert","val","setState","showAlert","setTimeout","handleInputChange","field","value","handleAddressInputChange","address","state","onFormSubmit","e","preventDefault","userId","user","id","url","name","email","phone","city","fetch","method","body","JSON","stringify","headers","then","response","json","console","log","updateContact","hideForm","render","width","target"],"sources":["D:/Desktop/contact-list-main/contact-list-main/src/components/UpdateContact.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container, Alert } from \"react-bootstrap\";\nclass UpdateContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: {\n        city: \"\",\n      },\n      showAlert: false,\n    };\n  }\n  toggleAlert = (val) => {\n    this.setState({\n      showAlert: val,\n    });\n    setTimeout(() => {\n      this.setState({\n        showAlert: !val,\n      });\n    }, 6000);\n  };\n  handleInputChange = (field, value) => {\n    this.setState({\n      [field]: value,\n    });\n  };\n  handleAddressInputChange = (field, value) => {\n    // handle all address fields\n    this.setState({\n      address: {\n        ...this.state.address, //spread previous value\n        [field]: value, //update new value of field\n      },\n    });\n  };\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const userId = this.props.user.id;\n    let url = `https://jsonplaceholder.typicode.com/users/1`;\n    const { name, email, phone, address } = this.state;\n    if (name && email && phone && address.city) {\n      fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          name,\n          email,\n          phone,\n          address,\n          userId,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      })\n        .then((response) => response.json())\n        .then((user) => {\n          console.log(user);\n          // call update contact function\n          this.props.updateContact(user);\n          this.props.hideForm();\n        });\n    } else {\n      this.toggleAlert(true);\n    }\n  };\n  render() {\n    const { email, name, phone, address } = this.props.user;\n    const { showAlert } = this.state;\n    // console.log(this.props);\n    return (\n      <Container className=\"m-3\">\n        <Form\n          className=\"border border-secondary p-4 border-3 rounded\"\n          style={{ width: \"22rem\" }}\n        >\n          <Row>\n            {showAlert && (\n              <Alert variant=\"info\">\n                Please fill in new or existing records...\n              </Alert>\n            )}\n          </Row>\n          {/* email username  phone */}\n          <Button\n            variant=\"danger\"\n            className=\"my-3\"\n            onClick={this.props.hideForm}\n          >\n            Close Form\n          </Button>\n          <Row>\n            {\" \"}\n            <Form.Group as={Col} controlId=\"formGridName\">\n              <Form.Label>Full Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder={name}\n                onChange={(e) => this.handleInputChange(\"name\", e.target.value)}\n              />\n            </Form.Group>\n          </Row>\n          <Row>\n            <Form.Group as={Col} controlId=\"formGridEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder={email}\n                onChange={(e) =>\n                  this.handleInputChange(\"email\", e.target.value)\n                }\n              />\n            </Form.Group>\n          </Row>\n          <Row className=\"mb-2\">\n            <Form.Group as={Col} controlId=\"formGridPhonenumber\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder={phone}\n                onChange={(e) =>\n                  this.handleInputChange(\"phone\", e.target.value)\n                }\n              />\n            </Form.Group>\n          </Row>\n          <Row className=\"mb-4\">\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder={address.city}\n                onChange={(e) =>\n                  this.handleAddressInputChange(\"city\", e.target.value)\n                }\n              />\n            </Form.Group>\n          </Row>\n          <Button variant=\"primary\" type=\"submit\" onClick={this.onFormSubmit}>\n            UpdateContact\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default UpdateContact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}